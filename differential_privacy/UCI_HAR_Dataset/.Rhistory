system.time(sapply(splitdt$pwgtp15,dt$SEX),mean))
system.time(sapply(split(dt$pwgtp15,dt$SEX),mean))
system.time(dt[,mean(pwgtp15),by=SEX])
system.time(rowMean(dt)[dt$SEX==1];rowMeans(dt)[dt$SEX==2])
source('~/QuizAPI.R')
install.packages("sqldf")
install.packages("RMySQL")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileurl, destfile="Quiz2Q2.csv", method="curl")
Q2 <- read.csv("Quiz2Q2.csv")
head(Q2)
con <- "http://biostat.jhsph.edu/~jleek/contact.html"
htmlC <- readli(con)
htmlC <- readLines(con)
htmlC <- readLines(con)
close(con)
htmlC
nchar(htmlC[10])
nchar(htmlC[20])
nchar(htmlC[30])
nchar(htmlC[100])
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileurl, destfile="Quiz2Q5.csv", method="curl")
download.file(fileurl, destfile="Quiz2Q5.for", method="curl")
Q5 <- read.fwf("Quiz2Q5.for")
scan("QuizQ5.for"")
scan("QuizQ5.for")
scan("Quiz2Q5.for")
readLines("./Quiz2Q5.for")
head(readLines("./Quiz2Q5.for"))
x <- read.fwf(
file=url("./Quiz2Q5.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
x <- read.fwf(
file="./Quiz2Q5.for",
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
sum(x$V4)
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,
| ip_id, package, country)
select(cran,
ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(-(X:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country ==
"US")
?Comparison
filter(cran, r_version <= "3.0.2", country ==
"IN")
filter(cran, country == "US" | country == "IN")
filter(cran,size > 100500 & r_os == "linux-gnu")
filter(cran,size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(R.version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(cran,mean(size))
summarise(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(cran, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
arrange(top_counts,desc(count()))
arrange(top_counts,desc(count)
)
arrange(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs =
0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
reset()
swirl()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2, sex_class, counts, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(data =
res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
library(readr)
parse_number("class5")
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(passed, status = "failed")
failed <- mutate(failed, status = "failed")
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "./Quiz3Q1.csv", method = "curl")
Q1 <- read.csv("./Quiz3Q1.csv")
head(Q1)
agricultureLogical <- Q1[,(Q1$AGS == 6 & Q1$ACR == 3)]
agricultureLogical <- Q1[, Q1$AGS == 6 & Q1$ACR == 3]
agricultureLogical <- Q1[[, Q1$AGS == 6 & Q1$ACR == 3]]
agricultureLogical <- Q1[(Q1$AGS == 6 & Q1$ACR == 3),]
which(agricultureLogical)
agricultureLogical <- (Q1$AGS == 6 & Q1$ACR == 3)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url, "./Quiz3Q2.jpg", method = "curl")
Q2 <- readJPEG("./Quiz3Q2.jpg", native=TRUE)
?quantile
quantile(Q2, c(0.3,0.8))
url <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "./Quiz3Q3GDP.csv", method = "curl")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url, "./Quiz3Q3Edu.csv", method = "curl")
library(dplyr)
GDPdf <- tbl_df(read.csv("./Quiz3Q3GDP.csv"))
Edudf <- tbl_df(read.csv("./Quiz3Q3Edu.csv"))
GDPdf
df <- read.csv("./Quiz3Q3GDP.csv")
head(df)
Edudf
df2 <- read.csv("./Quiz3Q3Edu.csv")
names(df)
names(df2)
dfmer <- merge(df,df2,by.x="X",by.y="CountryCode", all=FALSE)
dfmer
length(dfmer$X)
head(dfmer)
names(df)
names(df2)
tail(dfmer)
dfmer <- merge(df,df2,by.x="X",by.y="CountryCode", all=TRUE)
dfmer <- merge(df,df2,by.x="X",by.y="CountryCode", all=FALSE)
tblmer <- tbl_df(dfmer)
tblmer
arrange(tblmer,X)
tblmer <- arrange(tblmer,desc(Gross.domestic.product.2012))
tblmer
tblmer <- tbl_df(dfmer)
tblmer <- arrange(tblmer,desc(Gross.domestic.product.2012))
select(tblmer, X,Gross.domestic.product.2012)
select(tblmer, X,Gross.domestic.product.2012)[13]
View(select(tblmer, X,Gross.domestic.product.2012),Long.Name)
View(select(tblmer, X,Gross.domestic.product.2012))
filter(tblmer, !is.na(Gross.domestic.product.2012))
tblmer <- mutate(tblmer, Gross.domestic.product.2012 = as.integer(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012))
tblmer <- tbl_df(dfmer)
tblmer <- mutate(tblmer, Gross.domestic.product.2012 = as.integer(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012))
tblmer <- tbl_df(dfmer)
View(select(tblmer, X,Gross.domestic.product.2012))
filter(tblmer, Gross.domestic.product.2012 <> "")
filter(tblmer, Gross.domestic.product.2012 != "")
tblmer <- filter(tblmer, Gross.domestic.product.2012 != "")
View(select(tblmer, X,Gross.domestic.product.2012))
tblmer <- mutate(tblmer, Gross.domestic.product.2012 = as.integer(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012))
tblmer <- tbl_df(dfmer)
tblmer <- filter(tblmer, Gross.domestic.product.2012 != "")
tblmer <- mutate(tblmer, Gross.domestic.product.2012 = as.numeric(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012))
tblmer <- tbl_df(dfmer)
tblmer <- filter(tblmer, Gross.domestic.product.2012 != "")
tblmer <- mutate(tblmer, GDP = as.numeric(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012,GDP))
tblmer <- arrange(tblmer,desc(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012,GDP))
View(select(tblmer, X,Gross.domestic.product.2012,GDP,Long.Name))
tblmer <- mutate(tblmer, GDP = as.character(Gross.domestic.product.2012))
View(select(tblmer, X,Gross.domestic.product.2012,GDP,Long.Name))
tblmer <- mutate(tblmer, GDP = as.numeric(GDP))
View(select(tblmer, X,Gross.domestic.product.2012,GDP,Long.Name))
tblmer <- arrange(tblmer,desc(GDP))
View(select(tblmer, X,Gross.domestic.product.2012,GDP,Long.Name))
GDPdf
tblmer
View(select(tblmer, X,Income.Group,GDP,Long.Name))
OECD <- filter(tblmer,Income.Group == "High income: OECD")
nonOECD <- filter(tblmer,Income.Group == "High income: nonOECD")
average(OECD$GDP)
mean(OECD$GDP)
mean(nonOECD$GDP)
quantile(tblmer$GDP,c(0,0.2,0.4,0.6,0.8,1))
quantile(tblmer$GDP,c(0,0.25,0.5,0.75,1))
quantile(tblmer$GDP,c(0.2,0.4,0.6,0.8,1))
highest <- filter(tblmer, GDP < 39)
View(filter(highest, Income.Group == "Lower middle income"))
special <- filter(highest, Income.Group == "Lower middle income"))
special <- filter(highest, Income.Group == "Lower middle income")
View(select(special, X,Income.Group,GDP,Long.Name))
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year()
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(ymd("192012"))
ymd_hms(dt1
)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
?now
now(tzone = "America/New_York")
now("America/New_York")
nyc <- now(tzone = "America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes (50)
?with_tx()
?with_tz()
with_tz(arrive, "Hong Kong")
with_tz(arrive, "Asia/Hong Kong")
?with_tz
with_tz(arrive, "Asia/Hong Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- intercal(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "./quiz4q1.csv")
Q1 <- read.csv("./quiz4q1.csv")
names(Q1)
SP <- strsplit(names(Q1))
?strsplit
SP <- strsplit(names(Q1), "wgtp")
SP[123]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "./quiz4q2.csv", method = "curl")
Q2 <- read.csv("./quiz4q2.csv")
names(Q2)
head(Q2[2])
head(Q2)
GDP <- Q2$X.3
head(GDP)
length(GDP)
GDP <- GDP[5:330]
GDP
GDP <- sub(",", "", GDP)
GDP
GDP <- Q2$X.3
GDP <- as.character(GDP)
GDP
GDP <- sub(",", "", GDP)
GDP
GDP <- Q2$X.3
GDP <- as.character(GDP)
GDP <- GDP[[0-9]]
GDP <- grepl([0-9]*,GDP)
GDP <- grepl("[0-9]*",GDP)
GDP
GDP <- Q2$X.3
GDP <- as.character(GDP)
GDP <- grepl("^[0-9]",GDP)
GDP
GDP <- Q2$X.3
GDP <- as.character(GDP)
GDPL <- grepl("[0-9]",GDP)
GDPL
GDP2 <- GDP[GDPL]
GDP2
GDP3 <- sub(",","",GDP2)
GDP3
GDP3 <- gsub(",","",GDP2)
GDP3
GDP4 <- as.numeric(GDP3)
GDP4
mean(GDP4)
head(GDP, 10)
head(Q2, 15)
tail(Q2, 15)
G2clean <- Q2[Q2$Gross.domestic.product.2012<191]
G2clean <- Q2[5:195,]
G2clean
tail(Q2clean)
tail(G2clean)
G2clean <- Q2[5:194,]
tail(G2clean)
GDP <- G2clean$X.3
GDP <- as.character(GDP)
GDP
GDP2 <- gsub(",","",GDP)
GDP2
GDP3 <- as.numeric(GDP2)
GDP3
mean(GDP3)
grep("^United",Q2$X.2)
grep("^United",as.character(Q2$X.2))
grep("^United",as.character(G2clean$X.2))
as.character(G2clean$X.2)
order(as.character(G2clean$X.2))
grep("^United",as.character(G2clean$X.2))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
rm (GDP)
rm (GDP2)
rm (GDP3)
rm (GDP4)
download.file(url, "./quiz4q4.csv")
Q4 <- read.csv("./quiz4q4.csv")
library(dplyr)
head(Q2)
head(Q4)
head(G2clean)
mer <- merge(G2clean, Q4, by.x = "X", by.y = "CountryCode")
head mer
head (mer)
grep("Fiscal year end: June", mer$Special.Notes)
length(grep("Fiscal year end: June", mer$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
2012only <- sampleTimes[grep("2012",sampleTimes)]
grep("2012", sampleTimes)
length(grep("2012", sampleTimes))
2012only <- sampleTimes[grepl("2012",sampleTimes)]
only <- sampleTimes[grepl("2012",sampleTimes)]
length(only)
library(lubridate)
only
only <- ymd(only)
sum(weekdays(only) == Monday)
sum(weekdays(only) == "Monday")
setwd("~/UCI HAR Dataset")
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
head(subtrain)
head(xtrain)
head(ytrain)
source('~/UCI HAR Dataset/run_analysis.R')
rm(BodyAccX)
rm(BodyGyroX)
rm(subtrain)
rm(TotalAccX)
rm(xtrain)
rm(ytrain)
source('~/UCI HAR Dataset/run_analysis.R')
head(data)
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
head(data)
source('~/UCI HAR Dataset/run_analysis.R')
head(data)
source('~/UCI HAR Dataset/run_analysis.R')
head(data$label)
head(data)
source('~/UCI HAR Dataset/run_analysis.R')
head(data$activitiy)
head(data$activity)
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
label
head(data$activity)
source('~/UCI HAR Dataset/run_analysis.R')
head(data$activity)
head(data)
source('~/UCI HAR Dataset/run_analysis.R')
bysub
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
avg
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
avg
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
View(label)
avg
new
View(new)
source('~/UCI HAR Dataset/run_analysis.R')
View(new)
source('~/UCI HAR Dataset/run_analysis.R')
View(new)
warning()
warnings()
source('~/UCI HAR Dataset/run_analysis.R')
warnings()
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
View(new)
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
source('~/UCI HAR Dataset/run_analysis.R')
View(new)
source('~/UCI HAR Dataset/run_analysis.R')
tidydata <- read.table("tidydata.txt")
View(tidydata)
View(feature)
write.table(feature$V2, file = "CodeBook.md")
write.table(names(tidydata), file = "CodeBook.md")
